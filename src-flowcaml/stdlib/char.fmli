(**************************************************************************)
(*                                                                        *)
(*                               Flow Caml                                *)
(*                                                                        *)
(*          Vincent Simonet, Projet Cristal, INRIA Rocquencourt           *)
(*                                                                        *)
(*  Copyright 2002, 2003 Institut National de Recherche en Informatique   *)
(*  et en Automatique.  All rights reserved.  This file is distributed    *)
(*  under the terms of the GNU Library General Public License, with the   *)
(*  special exception on linking described in file ../LICENSE.            *)
(*                                                                        *)
(*  Author contact: Vincent.Simonet@inria.fr                              *)
(*  Software page: http://cristal.inria.fr/~simonet/soft/flowcaml/        *)
(*                                                                        *)
(**************************************************************************)

(* TEMPORARY Revoir le pc de Char.escaped *)
(** Character operations. *)

external code : 'a char -> 'a int = "%identity"
(** Return the ASCII code of the argument. *)
        
val chr : 'a int -{'b | Invalid_argument: 'b |}-> 'a char
with 'a < 'b
(** Return the character with the given ASCII code.
   Raise [Invalid_argument "Char.chr"] if the argument is
   outside the range 0--255. *)

val escaped : 'a char -> 'a string
(** Return a string representing the given character,
   with special characters escaped following the lexical conventions
   of Objective Caml. *)

val lowercase : 'a char -> 'a char
(** Convert the given character to its equivalent lowercase character. *)

val uppercase : 'a char -> 'a char
(** Convert the given character to its equivalent uppercase character. *)

(**/**)

external unsafe_chr : 'a int -> 'a char = "%identity"
